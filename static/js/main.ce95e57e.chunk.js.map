{"version":3,"sources":["actions/types.ts","reducers/auth.ts","reducers/index.ts","store.ts","services/axiosConfig.ts","actions/actionCreators.ts","utils/setAuthToken.ts","components/Navbar.tsx","selectors/authSelectors.ts","actions/actions.ts","components/authentification/Login.tsx","components/authentification/Register.tsx","utils/connectSocket.ts","components/chatRoom/ConnectRoom.tsx","components/chatRoom/ChatRoom.tsx","components/Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["types","initialState","token","isAuthenticated","loading","user","combineReducers","auth","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","instance","axios","create","baseURL","defaults","headers","localStorage","console","log","loginSuccess","registerSuccess","loadUserSuccess","logoutSuccess","authError","setAuthToken","axiosConfig","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","dispatch","useDispatch","useSelector","className","AppBar","position","Toolbar","Typography","variant","to","Button","onClick","a","removeItem","actionCreators","error","errors","response","data","message","forEach","margin","width","Login","useState","email","password","loginData","setLoginData","onChange","e","target","name","value","noValidate","autoComplete","onSubmit","preventDefault","body","JSON","stringify","post","res","setItem","login","TextField","id","label","color","Register","username","confirmPassword","registerData","setRegisterData","hasError","register","helperText","socket","io","ConnectRoom","onExitRoom","roomId","roomData","setRoomData","emit","onReset","Chatroom","messages","setMessages","userInput","setUserInput","useEffect","close","on","text","date","Date","prewMessage","length","map","formattedDate","toLocaleString","hour12","key","message_id","now","Dashboard","getItem","get","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce95e57e.chunk.js","sourcesContent":["import { ITypes } from \"../helpers/interfaces\";\r\n\r\nexport const types: ITypes = {\r\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\r\n  REGISTER_SUCCESS: \"REGISTER_SUCCESS\",\r\n  USER_LOADED: \"USER_LOADED\",\r\n  AUTH_ERROR: \"AUTH_ERROR\",\r\n  LOG_OUT: \"LOG_OUT\",\r\n  MESSAGES_LOADED: \"MESSAGES_LOADED\",\r\n  MESSAGES_ERROR: \"MESSAGES_ERROR\",\r\n};\r\n","import { types } from \"../actions/types\";\r\n\r\nimport { CreatorReturn, InitialState } from \"../helpers/interfaces\";\r\n\r\nconst initialState: InitialState = {\r\n  token: null,\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action: CreatorReturn ): InitialState {\r\n  switch (action.type) {\r\n    case types.REGISTER_SUCCESS:\r\n    case types.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: action.payload.token,\r\n        isAuthenticated: action.payload.isAuthenticated,\r\n        loading: action.payload.loading,\r\n      };\r\n    case types.LOG_OUT:\r\n    case types.AUTH_ERROR:\r\n      return {\r\n        ...state,\r\n        token: action.payload.token,\r\n        isAuthenticated: action.payload.isAuthenticated,\r\n        loading: action.payload.loading,\r\n        user: action.payload.user,\r\n      };\r\n    case types.USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: action.payload.isAuthenticated,\r\n        loading: action.payload.loading,\r\n        user: action.payload.user,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport auth from \"./auth\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://chat-cocket.herokuapp.com\",\r\n});\r\n\r\ninstance.defaults.headers[\"Content-Type\"] = \"application/json\";\r\n\r\nif (localStorage.token) {\r\n  instance.defaults.headers[\"auth-token\"] = localStorage.token;\r\n} else {\r\n  delete instance.defaults.headers[\"auth-token\"];\r\n}\r\n\r\nconsole.log(instance.defaults.headers)\r\nexport default instance;\r\n","import { types } from \"./types\";\r\n\r\nimport { IUser, CreatorReturn, IMessage } from \"../helpers/interfaces\";\r\n\r\nfunction loginSuccess(token: string): CreatorReturn {\r\n  return {\r\n    type: types.LOGIN_SUCCESS,\r\n    payload: {\r\n      token: token,\r\n      isAuthenticated: true,\r\n      loading: false,\r\n    },\r\n  };\r\n}\r\n\r\nfunction loadUserSuccess(user: IUser): CreatorReturn {\r\n  return {\r\n    type: types.USER_LOADED,\r\n    payload: {\r\n      isAuthenticated: true,\r\n      loading: false,\r\n      user: user,\r\n    },\r\n  };\r\n}\r\n\r\nfunction authError(): CreatorReturn {\r\n  return {\r\n    type: types.AUTH_ERROR,\r\n    payload: {\r\n      token: null,\r\n      isAuthenticated: false,\r\n      loading: false,\r\n      user: null,\r\n    },\r\n  };\r\n}\r\n\r\nfunction registerSuccess(token: string): CreatorReturn {\r\n  return {\r\n    type: types.REGISTER_SUCCESS,\r\n    payload: {\r\n      token: token,\r\n      isAuthenticated: true,\r\n      loading: false,\r\n    },\r\n  };\r\n}\r\n\r\nfunction logoutSuccess(): CreatorReturn {\r\n  return {\r\n    type: types.LOG_OUT,\r\n    payload: {\r\n      token: null,\r\n      isAuthenticated: false,\r\n      loading: false,\r\n      user: null,\r\n    },\r\n  };\r\n}\r\n\r\nexport default {\r\n  loginSuccess,\r\n  registerSuccess,\r\n  loadUserSuccess,\r\n  logoutSuccess,\r\n  authError,\r\n};\r\n","import axiosConfig from \"../services/axiosConfig\";\r\n\r\nconst setAuthToken = (token: string | null): void => {\r\n  if (token) {\r\n    axiosConfig.defaults.headers[\"auth-token\"] = token;\r\n  } else {\r\n      delete axiosConfig.defaults.headers[\"auth-token\"]\r\n  }\r\n};\r\n\r\nexport default setAuthToken;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { logout } from \"../actions/actions\";\r\nimport { getIsAuthenticated } from \"../selectors/authSelectors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Navbar: React.FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const isAuthenticated = useSelector(getIsAuthenticated());\r\n\r\n  const onClick = (): void => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link to=\"/\">\r\n              <span className={\"nav-link\"}>Pet Chat</span>\r\n            </Link>\r\n          </Typography>\r\n          {isAuthenticated ? (\r\n            <>\r\n              {/* <Link to=\"/\">\r\n                <Button variant=\"contained\" className={\"button-margins\"}>\r\n                  Connect to room\r\n                </Button>\r\n              </Link> */}\r\n              <Link to=\"/\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className={\"button-margins\"}\r\n                  onClick={onClick}\r\n                >\r\n                  Logout\r\n                </Button>\r\n              </Link>\r\n            </>\r\n          ) : (\r\n            <Link to=\"/login\">\r\n              <Button\r\n                variant=\"contained\"\r\n                className={\"button-margins\"}\r\n              >\r\n                Login\r\n              </Button>\r\n            </Link>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { RootStateOrAny } from \"react-redux\";\r\n\r\nexport const getIsAuthenticated = () => {\r\n  return (state: RootStateOrAny) => state.auth.isAuthenticated;\r\n};\r\n\r\nexport const getUserName = () => {\r\n  return (state: RootStateOrAny) => state.auth.user.username;\r\n};\r\n\r\nexport const getUser = () => {\r\n  return (state: RootStateOrAny) => state.auth.user;\r\n};","// import axios from \"axios\";\r\nimport axiosConfig from \"../services/axiosConfig\";\r\n\r\nimport actionCreators from \"./actionCreators\";\r\n\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n// import setAxiosHeders from \"../services/axiosHTTP\";\r\n\r\nimport { ILogin, IRegister, CreatorReturn } from \"../helpers/interfaces\";\r\nimport { Dispatch } from \"react\";\r\n\r\n// setAxiosHeders();\r\n\r\nexport const loadUser = () => async (\r\n  dispatch: Dispatch<CreatorReturn>\r\n): Promise<void> => {\r\n  try {\r\n    const res = await axiosConfig.get(\"/api/auth/user\");\r\n\r\n    dispatch(actionCreators.loadUserSuccess(res.data));\r\n  } catch (error) {\r\n    const errors: [] = error.response?.data?.errors || [\r\n      { message: \"Server error\" },\r\n    ];\r\n\r\n    if (errors) {\r\n      errors.forEach((error: any) => {\r\n        console.error(error);\r\n      });\r\n    }\r\n\r\n    dispatch(actionCreators.authError());\r\n  }\r\n};\r\n\r\nexport const login = ({ email, password }: ILogin) => async (\r\n  dispatch: Dispatch<CreatorReturn>\r\n) => {\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axiosConfig.post(\"/api/auth/login\", body);\r\n    console.log(res.data.token);\r\n    \r\n    localStorage.setItem(\"token\", res.data.token);\r\n    setAuthToken(res.data.token);\r\n\r\n    dispatch(actionCreators.loginSuccess(res.data.token));\r\n  } catch (error) {\r\n    const errors: [] = error.response?.data?.errors || [\r\n      { message: \"Server error\" },\r\n    ];\r\n\r\n    if (errors) {\r\n      errors.forEach((error: any) => {\r\n        console.error(error);\r\n      });\r\n    }\r\n\r\n    localStorage.removeItem(\"token\");\r\n\r\n    dispatch(actionCreators.authError());\r\n  }\r\n};\r\n\r\nexport const register = ({ email, password, username }: IRegister) => async (\r\n  dispatch: Dispatch<CreatorReturn>\r\n) => {\r\n  const body = JSON.stringify({ email, password, username });\r\n\r\n  try {\r\n    const res = await axiosConfig.post(\"/api/auth/register\", body);\r\n\r\n    localStorage.setItem(\"token\", res.data.token);\r\n    setAuthToken(res.data.token);\r\n\r\n    dispatch(actionCreators.registerSuccess(res.data.token));\r\n  } catch (error) {\r\n    const errors: [] = error.response?.data?.errors || [\r\n      { message: \"Server error\" },\r\n    ];\r\n\r\n    if (errors) {\r\n      errors.forEach((error: any) => {\r\n        console.error(error);\r\n      });\r\n    }\r\n\r\n    localStorage.removeItem(\"token\");\r\n\r\n    dispatch(actionCreators.authError());\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch: Dispatch<CreatorReturn>) => {\r\n  try {\r\n    localStorage.removeItem(\"token\");\r\n\r\n    dispatch(actionCreators.logoutSuccess());\r\n  } catch (error) {\r\n    const errors: [] = error.response?.data?.errors || [\r\n      { message: \"Server error\" },\r\n    ];\r\n\r\n    if (errors) {\r\n      errors.forEach((error: any) => {\r\n        console.error(error);\r\n      });\r\n    }\r\n    localStorage.removeItem(\"token\");\r\n\r\n    dispatch(actionCreators.authError());\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { login } from \"../../actions/actions\";\r\n\r\nimport { getIsAuthenticated } from \"../../selectors/authSelectors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Login: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const isAuthenticated = useSelector(getIsAuthenticated());\r\n\r\n  const [loginData, setLoginData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setLoginData({ ...loginData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e: React.ChangeEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n    dispatch(login(loginData));\r\n    setLoginData({ email: \"\", password: \"\" });\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n\r\n  return (\r\n    <section className={\"container\"}>\r\n      <h1 className={\"center\"}>Login</h1>\r\n      <form\r\n        className={`${classes.root} center`}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Email\"\r\n          value={loginData.email}\r\n          name=\"email\"\r\n          onChange={onChange}\r\n        />\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          value={loginData.password}\r\n          name=\"password\"\r\n          onChange={onChange}\r\n        />\r\n        <Link to=\"/register\">Do not have an account?</Link>\r\n        <Button variant=\"contained\" color=\"primary\" type={\"submit\"}>\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { register } from \"../../actions/actions\";\r\n\r\nimport { getIsAuthenticated } from \"../../selectors/authSelectors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Register: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const isAuthenticated = useSelector(getIsAuthenticated());\r\n\r\n  const [registerData, setRegisterData] = useState({\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const hasError = !(registerData.password === registerData.confirmPassword);\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setRegisterData({ ...registerData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e: React.ChangeEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n    registerData.password === registerData.confirmPassword &&\r\n      setRegisterData({\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        username: \"\",\r\n      });\r\n    dispatch(register(registerData));\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n\r\n  return (\r\n    <section className={\"container\"}>\r\n      <h1 className={\"center\"}>Register</h1>\r\n      <form\r\n        className={`${classes.root} center`}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n      >\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Email\"\r\n          value={registerData.email}\r\n          name=\"email\"\r\n          onChange={onChange}\r\n        />\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Name\"\r\n          value={registerData.username}\r\n          name=\"username\"\r\n          onChange={onChange}\r\n        />\r\n        <TextField\r\n          error={hasError}\r\n          id={hasError ? \"standard-error-helper-text\" : \"standard-basic\"}\r\n          helperText={hasError && \"password didn`t match\"}\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          value={registerData.password}\r\n          name=\"password\"\r\n          onChange={onChange}\r\n        />\r\n        <TextField\r\n          error={hasError}\r\n          id={hasError ? \"standard-error-helper-text\" : \"standard-basic\"}\r\n          helperText={hasError && \"password didn`t match\"}\r\n          label=\"Confirm password\"\r\n          type=\"password\"\r\n          value={registerData.confirmPassword}\r\n          name=\"confirmPassword\"\r\n          onChange={onChange}\r\n        />\r\n        <Link to=\"/login\">Already have an account?</Link>\r\n        <Button variant=\"contained\" color=\"primary\" type={\"submit\"}>\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import io from \"socket.io-client\";\r\n\r\nconst socket = io(\"https://chat-cocket.herokuapp.com\");\r\n\r\nexport default socket;","import React, { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { ConnectRoomProps } from \"../../helpers/interfaces\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ConnectRoom: React.FC<ConnectRoomProps> = ({\r\n  socket,\r\n  user,\r\n  onExitRoom,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [roomData, setRoomData] = useState({\r\n    user,\r\n    roomId: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRoomData({ ...roomData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    onExitRoom();\r\n    socket.emit(\"JOIN:ROOM\", roomData);\r\n    setRoomData({ ...roomData, roomId: \"\", password: \"\" });\r\n  };\r\n\r\n  const onReset = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    onExitRoom();\r\n    socket.emit(\"EXIT:ROOM\");\r\n    setRoomData({ ...roomData, roomId: \"\", password: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={\"center\"}>Connect to room</h1>\r\n      <form\r\n        className={`${classes.root} center`}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={onSubmit}\r\n        onReset={onReset}\r\n      >\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Room Name\"\r\n          name=\"roomId\"\r\n          onChange={onChange}\r\n          value={roomData.roomId}\r\n        />\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          onChange={onChange}\r\n          value={roomData.password}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" type={\"submit\"}>\r\n          Enter room\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" type={\"reset\"}>\r\n          Exit room\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectRoom;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport socket from \"../../utils/connectSocket\";\r\nimport ConnectRoom from \"./ConnectRoom\";\r\nimport { getUser } from \"../../selectors/authSelectors\";\r\nimport { PrevMessage } from \"../../helpers/interfaces\";\r\n\r\ninterface IMessage {\r\n  user?: string | undefined;\r\n  text: string;\r\n  username?: string;\r\n  date: Date;\r\n  message_id?: number;\r\n}\r\n\r\nconst Chatroom: React.FC = () => {\r\n  const [messages, setMessages] = useState<Array<IMessage | PrevMessage>>([]);\r\n  const [userInput, setUserInput] = useState<string>(\"\");\r\n  const user = useSelector(getUser());\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      socket.close();\r\n    };\r\n  }, []);\r\n\r\n  socket.on(\"message\", (data: IMessage) => {\r\n    setMessages([\r\n      ...messages,\r\n      { username: data.username, text: data.text, date: new Date() },\r\n    ]);\r\n  });\r\n\r\n  socket.on(\"PREW:MSG\", (prewMessage: [PrevMessage]) => {\r\n    setMessages([...messages, ...prewMessage]);\r\n  });\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserInput(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (userInput) {\r\n      setMessages([\r\n        ...messages,\r\n        { username: user.username, text: userInput, date: new Date() },\r\n      ]);\r\n      socket.emit(\"message\", userInput);\r\n      setUserInput(\"\");\r\n    }\r\n  };\r\n\r\n  const onExitRoom = () => {\r\n    setMessages([]);\r\n  };\r\n\r\n  return (\r\n    <section className={\"chat-container\"}>\r\n      <ConnectRoom socket={socket} user={user} onExitRoom={onExitRoom} />\r\n      <div className={\"chat\"}>\r\n        <div className={\"message-container\"}>\r\n          {messages.length\r\n            ? messages.map((message) => {\r\n                const formattedDate = new Date(\r\n                  message.date\r\n                ).toLocaleString(\"ru-RU\", { hour12: false });\r\n                return (\r\n                  <>\r\n                    {user.username === message.username ? (\r\n                      <div\r\n                        className={\"message\"}\r\n                        key={message.message_id || Date.now()}\r\n                      >\r\n                        <span>\r\n                        <strong>{message.username}</strong>: {message.text}\r\n                        </span>\r\n                        <span className={\"message-date\"}>{formattedDate}</span>\r\n                      </div>\r\n                    ) : (\r\n                      <div\r\n                        className={\"message inbox\"}\r\n                        key={message.message_id || Date.now()}\r\n                      >\r\n                        <span>\r\n                          {message.text}: <strong>{message.username}</strong>\r\n                        </span>\r\n                        <span className={\"message-date\"}>{formattedDate}</span>\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                );\r\n              })\r\n            : null}\r\n        </div>\r\n        <form onSubmit={onSubmit} className={\"chat-form\"}>\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            value={userInput}\r\n            name=\"message\"\r\n            onChange={onChange}\r\n            className={\"message-input\"}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type={\"submit\"}\r\n            className={\"send-button\"}\r\n          >\r\n            Send\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Chatroom;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { loadUser } from \"../actions/actions\";\r\n\r\nimport { getIsAuthenticated } from \"../selectors/authSelectors\";\r\nimport Chatroom from \"./chatRoom/ChatRoom\";\r\n\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(getIsAuthenticated());\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      dispatch(loadUser());\r\n    }\r\n  }, []);\r\n  return isAuthenticated ? (<Chatroom />) : (<h1>Main page</h1>);\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./store\";\r\n\r\nimport Navbar from \"./components/Navbar\";\r\nimport Login from \"./components/authentification/Login\";\r\nimport Register from \"./components/authentification/Register\";\r\nimport Dashboard from \"./components/Dashboard\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst App: React.FC = () => {\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      // store.dispatch(loadUser());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Dashboard />\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route exact path=\"/register\">\r\n            <Register />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}